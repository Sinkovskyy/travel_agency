{"ast":null,"code":"var _jsxFileName = \"/home/mywat88/Projects/travel_agency/src/components/Navbar.js\",\n    _s = $RefreshSig$();\n\nimport { useState, useEffect } from 'react';\nimport Sidebar from './Sidebar';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nimport { Fragment as _Fragment } from \"react/jsx-dev-runtime\";\n\nfunction Navbar() {\n  _s();\n\n  const [position, setPosition] = useState('navbar');\n  const [items, setItems] = useState([{\n    name: 'HOME',\n    position: 'sliderbar',\n    active: true\n  }, {\n    name: 'ABOUT',\n    position: 'about',\n    active: false\n  }]);\n  const [sidebarOpen, setSidebarOpen] = useState(true);\n\n  function getCurrentSectionName() {\n    let name;\n    items.forEach(item => {\n      const element = document.getElementsByClassName(item.position)[0];\n\n      if (element.offsetTop < window.pageYOffset + 200) {\n        name = item.name;\n      }\n    });\n    return name;\n  } // Scroll listener\n\n\n  function handleScroll() {\n    const category = getCurrentSectionName() || items[0].name;\n    changeItemActiveState(category);\n\n    if (window.pageYOffset >= 30) {\n      setPosition('navbar fixed');\n    } else {\n      setPosition('navbar');\n    }\n  } // Add and remove scroll listeners \n\n\n  useEffect(() => {\n    window.addEventListener('scroll', handleScroll);\n    return () => {\n      window.removeEventListener('scroll', handleScroll);\n    };\n  });\n\n  function changeItemActiveState(current_active) {\n    let active_item; // Change active item\n\n    setItems(items.map(item => {\n      if (current_active == item.name) {\n        active_item = item;\n        return { ...item,\n          active: true\n        };\n      }\n\n      ;\n      return { ...item,\n        active: false\n      };\n    }));\n    return active_item;\n  }\n\n  function handleItemClick(event) {\n    const current_active = event.target.firstChild.data;\n    const active_item = changeItemActiveState(current_active); // Scroll to the clicked category\n\n    document.getElementsByClassName(active_item.position)[0].scrollIntoView({\n      behavior: 'smooth'\n    });\n  }\n\n  return /*#__PURE__*/_jsxDEV(_Fragment, {\n    children: [/*#__PURE__*/_jsxDEV(\"div\", {\n      className: position,\n      children: [/*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"logo\",\n        children: \"FAST TRAVEL\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 92,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"nav-items\",\n        children: items.map((item, key) => {\n          const class_name = item.active ? 'nav-item active' : 'nav-item';\n          return /*#__PURE__*/_jsxDEV(\"a\", {\n            className: class_name,\n            onClick: handleItemClick,\n            children: item.name\n          }, key, false, {\n            fileName: _jsxFileName,\n            lineNumber: 97,\n            columnNumber: 24\n          }, this);\n        })\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 93,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"icon\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 100,\n        columnNumber: 9\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 91,\n      columnNumber: 5\n    }, this), /*#__PURE__*/_jsxDEV(Sidebar, {\n      isActive: false,\n      children: items.map((item, key) => {\n        const class_name = item.active ? 'nav-item active' : 'nav-item';\n        return /*#__PURE__*/_jsxDEV(\"a\", {\n          className: class_name,\n          onClick: handleItemClick,\n          children: item.name\n        }, key, false, {\n          fileName: _jsxFileName,\n          lineNumber: 106,\n          columnNumber: 24\n        }, this);\n      })\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 102,\n      columnNumber: 5\n    }, this)]\n  }, void 0, true);\n}\n\n_s(Navbar, \"Kx03PnWNwI+v5EHlSG+7kNAli50=\");\n\n_c = Navbar;\nexport default Navbar;\n\nvar _c;\n\n$RefreshReg$(_c, \"Navbar\");","map":{"version":3,"sources":["/home/mywat88/Projects/travel_agency/src/components/Navbar.js"],"names":["useState","useEffect","Sidebar","Navbar","position","setPosition","items","setItems","name","active","sidebarOpen","setSidebarOpen","getCurrentSectionName","forEach","item","element","document","getElementsByClassName","offsetTop","window","pageYOffset","handleScroll","category","changeItemActiveState","addEventListener","removeEventListener","current_active","active_item","map","handleItemClick","event","target","firstChild","data","scrollIntoView","behavior","key","class_name"],"mappings":"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","sourcesContent":["import {useState,useEffect} from 'react'\nimport Sidebar from './Sidebar';\n\n\n\n\n\n\n\n\nfunction Navbar()\n{\n    const [position,setPosition] = useState('navbar');\n    const [items,setItems] = useState([\n        {name:'HOME',position:'sliderbar',active:true},\n        {name:'ABOUT',position:'about',active:false},\n    ]);\n    const [sidebarOpen,setSidebarOpen] = useState(true);\n\n\n\n    function getCurrentSectionName()\n    {\n        let name;\n        items.forEach((item) =>\n        {\n            const element = document.getElementsByClassName(item.position)[0];\n            if( element.offsetTop < window.pageYOffset + 200)\n            {\n                name = item.name;\n            }\n        });\n        return name;\n    }\n\n\n    // Scroll listener\n    function handleScroll()\n    {\n        const category = getCurrentSectionName() || items[0].name;\n        changeItemActiveState(category);\n        if(window.pageYOffset >= 30)\n        {\n            setPosition('navbar fixed');\n        }\n        else\n        {\n            setPosition('navbar');\n        }\n    }\n    \n    // Add and remove scroll listeners \n    useEffect(() => {\n        window.addEventListener('scroll',handleScroll);\n        return () => \n        {\n            window.removeEventListener('scroll',handleScroll)\n        };\n    });\n\n\n    function changeItemActiveState(current_active)\n    {\n        let active_item;\n        // Change active item\n        setItems(items.map((item) =>\n        {\n            if(current_active == item.name)\n            {\n                active_item = item;\n                return {...item,active:true};\n            };\n            return {...item,active:false};\n        }));\n        return active_item;\n    }\n\n   \n\n    function handleItemClick(event)\n    {\n        const current_active = event.target.firstChild.data;\n        const active_item = changeItemActiveState(current_active);\n        // Scroll to the clicked category\n        document.getElementsByClassName(active_item.position)[0].scrollIntoView({ behavior: 'smooth' });\n    }\n  \n\n    return(\n        <>\n    <div className={position}>\n        <div className='logo'>FAST TRAVEL</div>\n        <div className=\"nav-items\">\n            {items.map((item,key) =>\n            {\n                const class_name = item.active ? 'nav-item active':'nav-item';\n                return <a className={class_name} key={key} onClick={handleItemClick}>{item.name}</a>\n            })}\n        </div>\n        <div className=\"icon\"></div>\n    </div>\n    <Sidebar isActive={false}>\n        {items.map((item,key) =>\n            {\n                const class_name = item.active ? 'nav-item active':'nav-item';\n                return <a className={class_name} key={key} onClick={handleItemClick}>{item.name}</a>\n            })}\n    </Sidebar>\n    </>\n    );\n}\n\nexport default Navbar;"]},"metadata":{},"sourceType":"module"}